<%- include('partial/header', { title: 'thiagohotelsportal',email:email,roleName:roleName }) %>
<%- include('partial/sidebar', { name: name}) %>
<style>
.room-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 10px;
	cursor: pointer;
}

.room-box {
    flex: 1 1 calc(25% - 10px);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    border: 2px solid #ccc;
    border-radius: 10px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    margin: 10px 0;
    background-color: #fff;
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}

.room-box:hover {
    transform: scale(1.05);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
}

.room-box i {
    font-size: 2em;
    color: #94081a; /* Fancy color */
}

.room-info {
    margin-left: 15px;
}

.room-info h2 {
    margin: 0;
    font-size: 1.5em;
}

.room-info .status {
    margin-top: 5px;
    font-weight: bold;
    font-size: 1.1em;
}

.booked {
    border-color: #94081a;
    background-color: #ffe6e6;
}

.booked .status {
    color: #94081a;
}

.available {
    border-color: #28a745;
    background-color: #e6ffe6;
}

.available .status {
    color: #28a745;
}

/* Responsive Design */
@media (max-width: 1200px) {
    .room-box {
        flex: 1 1 calc(33.33% - 10px);
    }
}

@media (max-width: 768px) {
    .room-box {
        flex: 1 1 calc(50% - 10px);
    }
}

@media (max-width: 480px) {
    .room-box {
        flex: 1 1 100%;
    }
}

/* Modal styles */
.modal {
    display: none; /* Initially hidden */
    position: fixed; 
    z-index: 1000; 
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4); 
    display: flex;
    align-items: center;
    justify-content: center;
	z-index: 9999999;
}

.modal-content {
    background-color: #fefefe;
    padding: 20px;
    border: 1px solid #888;
    width: 80%; 
    max-width: 500px; 
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    border-radius: 10px;
    position: relative;
}

.close {
    color: #aaa;
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

button {
    padding: 10px 20px;
    margin-top: 20px;
    background-color: #94081a;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #882162;
}

.form-control.bg-white {
            background-color: #fff;
        }
        .form-label {
            font-weight: bold;
        }
        .date-placeholder {
            color: #6c757d; /* Bootstrap's secondary color for placeholder text */
        }
        .loader {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 4px solid #007bff;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            display: inline-block;
            margin-right: 8px;
            vertical-align: middle;
            display: none; /* Initially hidden */
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .btn:disabled {
            cursor: not-allowed;
            opacity: 0.7;
        }

		.form-label {
    display: block;
    font-weight: bold;
    margin-bottom: 8px;
}

.form-select {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    background-color: #fff;
    transition: border-color 0.3s ease-in-out;
}

.form-select:focus {
    border-color: #94081a; /* Your desired focus color */
    outline: none;
}





</style>
		<div class="page-wrapper">
			<div class="content container-fluid">
				<div class="page-header">
					<div class="row align-items-center">
						<div class="col">
							
							<h3 class="page-title mt-5">room of <%=category_name%></h3> 
							<a href="/portal/add-booking">Go back</a> <br/>
							<small>create a new booking by clicking on available room</small>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-lg-12">
						<div class="room-container">
							<!-- Room Boxes -->
<% categories.forEach(element => { %>
    <div class="room-box <%= element.status ? 'booked' : 'available' %>"
        <% if (!element.status) { %>
            onclick="openModal('<%= element.room_number %>', '<%= element.room_name %>', '<%= element.status ? 'Booked' : 'Available' %>','<%= element._id %>')"
        <% } %>
    >
        <i class="fas <%= element.status ? 'fa-key' : 'fa-door-open' %>"></i>
        <div class="room-info">
            <h2>Room <%= element.room_number %></h2>
            <p><%= element.room_name %></p>
            <p class="status"><%= element.status ? 'Booked' : 'Available' %></p>
        </div>
    </div>
<% }) %>

<!-- Modal Structure -->
<div id="roomModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2 id="modalRoomNumber">Room</h2>
        <p id="modalRoomName"></p>
        <p id="modalRoomStatus"></p>
		
		<form id="payment_form" name="contact_form" class="">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Check In</label>
                    <input id="checkIn" name="start" class="form-control bg-white" type="date">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Check Out</label>
                    <input id="checkOut" name="end" class="form-control bg-white" type="date">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Full Name</label>
                    <input name="guest_name" class="form-control bg-white" type="text" placeholder="Full Name">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Phone</label>
                    <input name="guest_phone" class="form-control bg-white" type="text" placeholder="Phone Number">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Email</label>
                    <input name="guest_email" class="form-control bg-white" type="text" placeholder="Email Address">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Address</label>
                    <input name="guest_address" class="form-control bg-white" type="text" placeholder="Address">
                </div>
				<div class="col-md-6 mb-3">
					<label class="form-label">Payment Type</label>
					<select name="paymentmode" id="" class="form-select">
						<% modes.forEach(element => { %>
							<option value="<%= element.mode %>"><%= element.mode %></option>
						<% }) %>
					</select>
				</div>
				
			<!-- <button id="submit_button" type="submit" class="theme-btn btn-style-one w-100" data-loading-text="Please wait..." >Submit</button> -->
        </form>
		
    </div>
	<button id="submit_button" class="btn btn-danger mt-3" type="submit">
		<span class="loader"></span>
		Submit
	</button>
</div>


														
						</div>
						
						
					</div>
				</div>
				<!-- <button type="button" class="btn btn-primary buttonedit1">Create Booking</button> -->
			</div>
		</div>
	</div>
	<script src="assets/js/jquery-3.5.1.min.js"></script>
	<script src="assets/js/popper.min.js"></script>
	<script src="assets/js/bootstrap.min.js"></script>
	<script src="assets/js/moment.min.js"></script>
	<script src="assets/js/bootstrap-datetimepicker.min.js"></script>
	<script src="assets/plugins/slimscroll/jquery.slimscroll.min.js"></script>
	<script src="assets/plugins/raphael/raphael.min.js"></script>
	<script src="assets/js/script.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

	<script>
// Function to open the modal
// Function to open the modal
let room_id , room_name,room_number;
function openModal(roomNumber, roomName, roomStatus,roomId) {
    const modal = document.getElementById('roomModal');
    const modalContent = document.querySelector('.modal-content');
    room_id = roomId,
	room_name = roomName;
	room_number = roomNumber;
    // Set modal content
    document.getElementById('modalRoomNumber').innerText = "Room " + roomNumber;
    document.getElementById('modalRoomName').innerText = roomName;
    document.getElementById('modalRoomStatus').innerText = roomStatus;

    
    // Show the modal
    modal.style.display = "flex";
}

// Function to close the modal
function closeModal() {
    const modal = document.getElementById('roomModal');
    modal.style.display = "none";
}

// Optional: Close the modal if the user clicks outside the modal content
window.onclick = function(event) {
    const modal = document.getElementById('roomModal');
    if (event.target === modal) {
        closeModal();
    }
}

// Optional: Ensure modal is hidden when the page loads
document.addEventListener("DOMContentLoaded", function() {
    const modal = document.getElementById('roomModal');
    modal.style.display = "none";

	function formatDate(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        // Set today's date and tomorrow's date as default values
		function setDefaultDates() {
					const today = new Date();
					const tomorrow = new Date();
					tomorrow.setDate(today.getDate() + 1);
		
					const checkInInput = document.getElementById('checkIn');
					const checkOutInput = document.getElementById('checkOut');
		
					// Set default values
					checkInInput.value = formatDate(today);
					checkOutInput.value = formatDate(tomorrow);
		
					// Add placeholder text
					checkInInput.setAttribute('aria-placeholder', 'Arrive Date');
					checkOutInput.setAttribute('aria-placeholder', 'Departure Date');
				}
		
				// Set default dates when the page loads
				document.addEventListener('DOMContentLoaded', setDefaultDates);


    document.getElementById('submit_button').addEventListener('click',async  function(event) {
        // Prevent form submission if validation fails
        event.preventDefault();

        // Get values from input fields
        const checkInDate = document.getElementById('checkIn').value;
        const checkOutDate = document.getElementById('checkOut').value;
        const guestName = document.querySelector('input[name="guest_name"]').value;
        const guestPhone = document.querySelector('input[name="guest_phone"]').value;
        const guestEmail = document.querySelector('input[name="guest_email"]').value;
        const guestAddress = document.querySelector('input[name="guest_address"]').value;
        const paymentmode = document.querySelector('select[name="paymentmode"]').value;
		const loader = document.querySelector('.loader');
		const submitButton = document.getElementById('submit_button');
	


		loader.style.display = 'inline-block';
            submitButton.disabled = true;

        // Validate that none of the fields are empty
        if (!checkInDate || !checkOutDate || !guestName || !guestPhone || !guestEmail || !guestAddress) {
			
					Toastify({
					text: "Please fill out all fields.",
					duration: 3000,
					destination: "https://github.com/apvarun/toastify-js",
					newWindow: true,
					close: true,
					gravity: "top", // `top` or `bottom`
					position: "center", // `left`, `center` or `right`
					stopOnFocus: true, // Prevents dismissing of toast on hover
					style: {
						background: "red",
					},
					onClick: function(){} // Callback after click
					}).showToast();
					loader.style.display = 'none';
					submitButton.disabled = false;
					return
			
        }

        // Validate that check-in date is before check-out date
        if (new Date(checkInDate) >= new Date(checkOutDate)) {
        

			Toastify({
					text: "Check-out date must be after check-in date.",
					duration: 3000,
					destination: "https://github.com/apvarun/toastify-js",
					newWindow: true,
					close: true,
					gravity: "top", // `top` or `bottom`
					position: "center", // `left`, `center` or `right`
					stopOnFocus: true, // Prevents dismissing of toast on hover
					style: {
						background: "red",
					},
					onClick: function(){} // Callback after click
					}).showToast();
					loader.style.display = 'none';
					submitButton.disabled = false;
					return
        }

        // Validate email format
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailPattern.test(guestEmail)) {
			Toastify({
					text: "Please enter a valid email address.",
					duration: 3000,
					destination: "https://github.com/apvarun/toastify-js",
					newWindow: true,
					close: true,
					gravity: "top", // `top` or `bottom`
					position: "center", // `left`, `center` or `right`
					stopOnFocus: true, // Prevents dismissing of toast on hover
					style: {
						background: "red",
					},
					onClick: function(){} // Callback after click
					}).showToast();
					loader.style.display = 'none';
					submitButton.disabled = false;
					return
			
        }

        // All validations passed
        console.log('Check In Date:', checkInDate);
        console.log('Check Out Date:', checkOutDate);
        console.log('Guest Name:', guestName);
        console.log('Guest Phone:', guestPhone);
        console.log('Guest Email:', guestEmail);
        console.log('Guest Address:', guestAddress);
		const url = new URL(window.location.href);
		const id = url.searchParams.get('id');
		const cate_name = url.searchParams.get('cat_id');
		let payload = {
			start:checkInDate, // Start
			end:checkOutDate, // End
			guest_name:guestName,
			guest_email:guestEmail,
			guest_phone:guestPhone,
			guest_address:guestAddress,
			mode:paymentmode,
			category_id:id,
			room_id:room_id,
			room_name:room_name,
			room_number:room_number,
            category_id:id,  // Category ID (assuming it's the same as room ID for simplicity)
			category_name:cate_name,
		}

console.log("🚀 ~ room_id , room_name,room_number:", room_id , room_name,room_number,payload)



		const response = await fetch("/payments/paystack/initialize/reception",{
			method: 'POST',
			headers: {
				"content-type": "application/json",
			},
			body: JSON.stringify(payload)
		})
		const data = await response.json();
	
			if (!data.status) {
				Toastify({
						text: "error initializing payment for booking",
						duration: 3000,
						destination: "https://github.com/apvarun/toastify-js",
						newWindow: true,
						close: true,
						gravity: "top", // `top` or `bottom`
						position: "center", // `left`, `center` or `right`
						stopOnFocus: true, // Prevents dismissing of toast on hover
						style: {
							background: "red",
						},
						onClick: function(){} // Callback after click
						}).showToast();
						loader.style.display = 'none';
						submitButton.disabled = false;
						return
			}
			loader.style.display = 'none';
						submitButton.disabled = false;
		
			// Redirect to Paystack payment page
			// window.location.href = data.data.authorization_url;
            // loader.style.display = 'none';
            // submitButton.disabled = false;
            // Add code to handle successful payment and redirect to booking success page
    });    
});







	// $(function() {
	// 	$('#datetimepicker3').datetimepicker({
	// 		format: 'LT'
	// 	});
	// });
	</script>
</body>

</html>