<%- include('partial/header', { title: 'thiagohotelsportal',email:email,roleName:roleName }) %>
<%- include('partial/sidebar', { name: name}) %>
<style>
	body {
		font-family: Arial, sans-serif;
		background-color: #f7f7f7;
		margin: 0;
		padding: 0;
		display: flex;
		height: 100vh;
		overflow: hidden;
	}



	.sidebar h2 {
		margin-top: 0;
	}

	.tabs {
		display: flex;
		margin-bottom: 20px;
	}

	.tabs button {
		flex: 1;
		padding: 10px;
		background-color: #ab0b1f;
		color: white;
		border: none;
		cursor: pointer;
	}

	.tabs button.active {
		background-color: #94081a;
		font-weight: bold;
	}

	.search-bar input {
		width: 100%;
		padding: 10px;
		border: none;
		border-radius: 5px;
		margin-bottom: 20px;
		box-sizing: border-box;
	}

	.summary .item {
		display: flex;
		justify-content: space-between;
		margin-bottom: 10px;
		background-color: white;
		color: black;
		padding: 10px;
		border-radius: 5px;
	}

	.summary .item button {
		background: none;
		border: none;
		color: #94081a;
		cursor: pointer;
	}

	.total-cost {
		font-size: 1.5em;
		text-align: right;
		background-color: white;
		padding: 10px;
		border-radius: 5px;
		margin-bottom: 20px;
		color: black;
	}

	.main-content {
		flex-grow: 1;
		padding: 20px;
		overflow-y: auto;
		height: 80vh;
		overflow-y: scroll;
	}

	.product-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
		gap: 15px;
	}

	.product-card {
		background-color: white;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
		padding: 15px;
		text-align: center;
		cursor: pointer;
		transition: transform 0.2s;
		border: 2px solid transparent;
	}

	.product-card.selected {
		border: 2px solid #94081a;
	}

	.product-card:hover {
		transform: scale(1.05);
	}

	.product-card img {
		width: 100%;
		height: 120px;
		object-fit: cover;
		border-radius: 5px;
		margin-bottom: 10px;
	}

	.product-name {
		font-size: 1.1em;
		margin: 10px 0;
	}

	.product-price {
		color: #94081a;
		font-size: 1.2em;
		font-weight: bold;
	}

	.button-container {
		text-align: right;
	}

	.button-container button {
		background-color: #94081a;
		color: white;
		padding: 10px 20px;
		border: none;
		cursor: pointer;
		margin-left: 10px;
		border-radius: 5px;
	}

	.button-container button:disabled {
		background-color: #ccc;
		cursor: not-allowed;
	}

	.customer-name-input {
		margin-bottom: 20px;
	}

	.customer-name-input input {
		width: 100%;
		padding: 10px;
		border: none;
		border-radius: 5px;
		box-sizing: border-box;
	}

	.recent-summary-list .summary-item {
		display: flex;
		justify-content: space-between;
		margin-bottom: 10px;
		padding: 10px;
		border: 1px solid #ddd;
		border-radius: 5px;
		background: white;
	}

	.recent-summary-list .summary-item button {
		background: none;
		border: none;
		color: #94081a;
		cursor: pointer;
	}
</style>
		<div class="page-wrapper">
			<div class="content container-fluid">
				<div class="page-header">
					<div class="row align-items-center">
						<div class="col">
							<div class="mt-5">
								<h4 class="card-title float-left mt-2">List of Drinks</h4>
                                <a href="/portal/add-booking" class="btn btn-primary float-right veiwbutton ">Add new</a>
                            </div>
						</div>
					</div>
				
				</div>
				
				<div class="row">
					<div class="col-sm-12">
						<div class="card card-table">
							<div class="card-body booking_card">
								<div class="table-responsive">
									<div class="main-content">
										<div class="product-grid" id="product-grid">
											<!-- Product items will be dynamically added here -->
										</div>
									</div>
								
									<script>
										const products = [
											{ id: 1, name: "Product 1", price: 10, image: "https://via.placeholder.com/150" },
											{ id: 2, name: "Product 2", price: 20, image: "https://via.placeholder.com/150" },
											{ id: 3, name: "Product 3", price: 30, image: "https://via.placeholder.com/150" },
											{ id: 4, name: "Product 4", price: 390, image: "https://via.placeholder.com/150" },
											{ id: 5, name: "Product 5", price: 350, image: "https://via.placeholder.com/150" },
											{ id: 6, name: "Product 6", price: 30, image: "https://via.placeholder.com/150" },
											{ id: 7, name: "Product 7", price: 330, image: "https://via.placeholder.com/150" },
											{ id: 1, name: "Product 1", price: 10, image: "https://via.placeholder.com/150" },
											{ id: 2, name: "Product 2", price: 20, image: "https://via.placeholder.com/150" },
											{ id: 3, name: "Product 3", price: 30, image: "https://via.placeholder.com/150" },
											{ id: 4, name: "Product 4", price: 390, image: "https://via.placeholder.com/150" },
											{ id: 5, name: "Product 5", price: 350, image: "https://via.placeholder.com/150" },
											{ id: 6, name: "Product 6", price: 30, image: "https://via.placeholder.com/150" },
											{ id: 7, name: "Product 7", price: 330, image: "https://via.placeholder.com/150" },
											{ id: 8, name: "Product 8", price: 310, image: "https://via.placeholder.com/150" },
											// Add more products as needed
										];
								
										const cart = [];
										const recentSummaries = [
											{ id: 1, customerName: "John Doe", total: 100.00, date: "2024-09-01" },
											{ id: 2, customerName: "Jane Smith", total: 150.00, date: "2024-09-02" },
											// Add more recent summaries as needed
										];
								
										function renderProductGrid(products) {
											const grid = document.getElementById('product-grid');
											grid.innerHTML = products.map(product => `
												<div class="product-card" id="product-${product.id}" onclick="addToCart(${product.id})">
													<img src="${product.image}" alt="${product.name}">
													<div class="product-info">
														<h3>${product.name}</h3>
														<p>$${product.price.toFixed(2)}</p>
													</div>
												</div>
											`).join('');
										}
								
										function addToCart(productId) {
											const product = products.find(p => p.id === productId);
											const existingItem = cart.find(item => item.product.id === productId);
									
											// Toggle product card selection style
											const productCard = document.getElementById(`product-${productId}`);
											productCard.classList.toggle('selected');
								
											if (existingItem) {
												existingItem.quantity++;
											} else {
												cart.push({ product, quantity: 1 });
											}
									
											updateCart();
										}
								
										function updateCart() {
											const cartList = document.getElementById('cart-list');
											const totalCostElem = document.getElementById('total-cost');
											let total = 0;
									
											cartList.innerHTML = cart.map(item => `
												<div class="item">
													<span>${item.product.name} (x${item.quantity})</span>
													<button onclick="removeFromCart(${item.product.id})">Remove</button>
												</div>
											`).join('');
									
											total = cart.reduce((acc, item) => acc + (item.product.price * item.quantity), 0);
											totalCostElem.innerText = total.toFixed(2);
										}
								
										function removeFromCart(productId) {
											const productIndex = cart.findIndex(item => item.product.id === productId);
											const productCard = document.getElementById(`product-${productId}`);
											if (productIndex > -1) {
												cart.splice(productIndex, 1);
												productCard.classList.remove('selected');
											}
											updateCart();
										}
								
										function clearCart() {
											cart.length = 0; // Empty the cart array
											document.querySelectorAll('.product-card.selected').forEach(card => card.classList.remove('selected'));
											updateCart();
										}
								
										function saveCart() {
											const customerName = document.getElementById('customer-name').value;
											if (cart.length === 0 || !customerName) {
												alert('Please add items to the cart and enter the customer name.');
												return;
											}
								
											const cartData = cart.map(item => ({
												id: item.product.id,
												name: item.product.name,
												quantity: item.quantity
											}));
								
											const payload = {
												customerName,
												cart: cartData
											};
								
											fetch('/bar/buys', {
												method: 'POST',
												headers: {
													'Content-Type': 'application/json'
												},
												body: JSON.stringify(payload)
											})
											.then(response => response.json())
											.then(data => {
												alert('Cart saved successfully!');
												clearCart(); // Clear the cart after saving
												addRecentSummary({ id: data.id, customerName, total: data.total });
											})
											.catch(error => console.error('Error saving cart:', error));
										}
								
										function searchProducts() {
											const searchTerm = document.getElementById('product-search').value.toLowerCase();
											const filteredProducts = products.filter(product =>
												product.name.toLowerCase().includes(searchTerm)
											);
											renderProductGrid(filteredProducts);
										}
								
										function addRecentSummary(summary) {
											recentSummaries.push(summary);
											renderRecentSummaries();
										}
								
										function renderRecentSummaries() {
											const recentSummaryList = document.getElementById('recent-summary-list');
											recentSummaryList.innerHTML = recentSummaries.map(summary => `
												<div class="summary-item">
													<div>
														<strong>${summary.customerName}</strong><br>
														Total: $${summary.total.toFixed(2)}<br>
														Date: ${summary.date}
													</div>
													<button onclick="viewSummary(${summary.id})">View</button>
												</div>
											`).join('');
										}
								
										function viewSummary(id) {
											// Implement view summary functionality
											alert(`Viewing summary for ID: ${id}`);
										}
								
										// Handle tab switching
										document.querySelectorAll('.tab-link').forEach(button => {
											button.addEventListener('click', function() {
												document.querySelectorAll('.tab-link').forEach(btn => btn.classList.remove('active'));
												this.classList.add('active');
												document.querySelectorAll('.tab-content').forEach(tab => tab.style.display = 'none');
												document.getElementById(this.dataset.tab).style.display = 'block';
												if (this.dataset.tab === 'recent-summary') {
													renderRecentSummaries();
												}
											});
										});
								
										// Initialize the product grid
										renderProductGrid(products);
										renderRecentSummaries();
									</script>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div id="delete_asset" class="modal fade delete-modal" role="dialog">
				<div class="modal-dialog modal-dialog-centered">
					<div class="modal-content">
						<div class="modal-body text-center"> <img src="assets/img/sent.png" alt="" width="50" height="46">
							<h3 class="delete_class">Are you sure want to delete this Asset?</h3>
							<div class="m-t-20"> <a href="#" class="btn btn-white" data-dismiss="modal">Close</a>
								<button type="submit" class="btn btn-danger">Delete</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script data-cfasync="false" src="../../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
	<script src="assets/js/jquery-3.5.1.min.js"></script>
	<script src="assets/js/popper.min.js"></script>
	<script src="assets/js/bootstrap.min.js"></script>
	<script src="assets/plugins/datatables/jquery.dataTables.min.js"></script>
	<script src="assets/plugins/datatables/datatables.min.js"></script>
	<script src="assets/plugins/slimscroll/jquery.slimscroll.min.js"></script>
	<script src="assets/plugins/raphael/raphael.min.js"></script>
	<script src="assets/js/script.js"></script>
	<script>
		// Check if the query parameter "room_number" exists in the URL
		const params = new URLSearchParams(window.location.search);
		if (params.has('room_number')) {
		  // Show the "Go Back" button if a search was performed
		  document.getElementById('goBackButton').style.display = 'block';
		}
	  </script>
</body>

</html>